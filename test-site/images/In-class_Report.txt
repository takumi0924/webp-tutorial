学籍番号：5421064
氏名：佐藤　匠
座席番号：
前の座席に誰か座っている：yes 
右の座席に誰か座っている：yes 
左の座席に誰か座っている no

※ 上記に関して未記入項目がある場合は採点をしない（0点扱いとする）
※ オンライン参加の場合は，座席番号欄に「オンライン」と明記する
※ 事前に許可のある場合のみオンライン受講を認めています


下記では，作成した各プログラムとそのポイントを回答してください．
なお「記述問題」に対しては，「プログラム本体（採点対象）」の方に文章を記載してください．

-------------------
問題番号：p01 01
--- プログラム本体（採点対象）
変数とポインターは違う
間接演算子を使うとポインターで変数をさせる
ポインターは引き数に使える


--- 工夫した点や考え方のポイント（200文字程度，採点対象）



-------------------
問題番号：p01 02
--- プログラム本体（採点対象）
関数は一つの値しか返せない
複数返すためにはポインタと構造体を利用する


--- 工夫した点や考え方のポイント（200文字程度，採点対象）



-------------------
問題番号：p01 03：
--- プログラム本体（採点対象）
呼び出し元の変数の値を変えたい場合
逆に値のみを計算する場合は変数のほうが良い


--- 工夫した点や考え方のポイント（200文字程度，採点対象）



-------------------
問題番号：p01 04
--- プログラム本体（採点対象）
#include<stdio.h>
void main(){
  int v;
  int *v_ptr;
  v=10;
  v_ptr=&v;
  printf("%p\n",&v);
  printf("%p\n",v_ptr);
}



--- 工夫した点や考え方のポイント（200文字程度，採点対象）



-------------------
問題番号：p01 05
--- プログラム本体（採点対象）
#include<stdio.h>
int main(void){
  int a[2] = {10, 20};
  int *p1;
  int *p2;
  p1=&a[0];
  *p1=*p1*3;
  p2=&a[1];
  scanf("%d",p2);
  /*配列の先頭のアドレスと配列全体のアドレスは同じまた隣り合う配列のアドレスの差は１*/
  printf("%p, %p, %p\n", a, &a[0], &a[1]);
  printf("%ld\n", &a[1] - &a[0] );
  return 0;
}


--- 工夫した点や考え方のポイント（200文字程度，採点対象）
*をつけるときは値をいじるとき



-------------------
問題番号：p01 06
--- プログラム本体（採点対象）
#include<stdio.h>
void to_max(double *a,double *b){
  if(*a>*b){
    *b=*a;
  }else{
    *a=*b;
  }
}
void main(){
  double x,y;
  printf("x y\n");
  scanf("%lf",&x);
  scanf("%lf",&y);
  to_max(&x,&y);
  printf("%lf %lf\n",x,y);
}


--- 工夫した点や考え方のポイント（200文字程度，採点対象）
引数にポインタをもってくるときは間接演算子をつける


-------------------
問題番号：p01 07
--- プログラム本体（採点対象）
#include<stdio.h>
void swap3(double *a,double *b,double *c){
  double x;
  x=*a;
  *a=*b;
  *b=*c;
  *c=x;
}
void main(){
  double a,b,c;
  scanf("%lf %lf %lf",&a,&b,&c);
  swap3(&a,&b,&c);
  printf("%lf %lf %lf",a,b,c);
}


--- 工夫した点や考え方のポイント（200文字程度，採点対象）
aの値を変数ｘに残す


-------------------
